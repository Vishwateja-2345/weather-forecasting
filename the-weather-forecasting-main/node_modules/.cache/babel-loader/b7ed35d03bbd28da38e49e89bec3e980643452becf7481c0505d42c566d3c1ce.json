{"ast":null,"code":"import React,{useState}from'react';import{Button}from'@mui/material';import{reverseGeocode}from'../../api/OpenWeatherService';import{jsx as _jsx}from\"react/jsx-runtime\";const Search=_ref=>{let{onSearchChange}=_ref;const[isGetting,setIsGetting]=useState(false);const handleGetForecast=()=>{if(!navigator.geolocation){return;}setIsGetting(true);navigator.geolocation.getCurrentPosition(async position=>{const{latitude,longitude}=position.coords;let label='Current Location';try{const place=await reverseGeocode(latitude,longitude);if(place){const{name,country,state}=place;label=\"\".concat(name||'Current Location').concat(state?', '+state:'').concat(country?', '+country:'');}}catch(_){// ignore and fallback to default label\n}onSearchChange({value:\"\".concat(latitude,\" \").concat(longitude),label});setIsGetting(false);},()=>{setIsGetting(false);},{enableHighAccuracy:true,timeout:10000,maximumAge:60000});};return/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleGetForecast,disabled:isGetting,children:isGetting?'Getting forecast…':'Get Weather Forecast'});};export default Search;","map":{"version":3,"names":["React","useState","Button","reverseGeocode","jsx","_jsx","Search","_ref","onSearchChange","isGetting","setIsGetting","handleGetForecast","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","label","place","name","country","state","concat","_","value","enableHighAccuracy","timeout","maximumAge","variant","color","onClick","disabled","children"],"sources":["/workspace/the-weather-forecasting-main/src/components/Search/Search.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { reverseGeocode } from '../../api/OpenWeatherService';\n\nconst Search = ({ onSearchChange }) => {\n  const [isGetting, setIsGetting] = useState(false);\n\n  const handleGetForecast = () => {\n    if (!navigator.geolocation) {\n      return;\n    }\n\n    setIsGetting(true);\n\n    navigator.geolocation.getCurrentPosition(\n      async (position) => {\n        const { latitude, longitude } = position.coords;\n        let label = 'Current Location';\n        try {\n          const place = await reverseGeocode(latitude, longitude);\n          if (place) {\n            const { name, country, state } = place;\n            label = `${name || 'Current Location'}${state ? ', ' + state : ''}${country ? ', ' + country : ''}`;\n          }\n        } catch (_) {\n          // ignore and fallback to default label\n        }\n\n        onSearchChange({ value: `${latitude} ${longitude}`, label });\n        setIsGetting(false);\n      },\n      () => {\n        setIsGetting(false);\n      },\n      { enableHighAccuracy: true, timeout: 10000, maximumAge: 60000 }\n    );\n  };\n\n  return (\n    <Button variant=\"contained\" color=\"primary\" onClick={handleGetForecast} disabled={isGetting}>\n      {isGetting ? 'Getting forecast…' : 'Get Weather Forecast'}\n    </Button>\n  );\n};\n\nexport default Search;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,MAAM,KAAQ,eAAe,CACtC,OAASC,cAAc,KAAQ,8BAA8B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9D,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,cAAe,CAAC,CAAAD,IAAA,CAChC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CAEjD,KAAM,CAAAU,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,GAAI,CAACC,SAAS,CAACC,WAAW,CAAE,CAC1B,OACF,CAEAH,YAAY,CAAC,IAAI,CAAC,CAElBE,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACtC,KAAO,CAAAC,QAAQ,EAAK,CAClB,KAAM,CAAEC,QAAQ,CAAEC,SAAU,CAAC,CAAGF,QAAQ,CAACG,MAAM,CAC/C,GAAI,CAAAC,KAAK,CAAG,kBAAkB,CAC9B,GAAI,CACF,KAAM,CAAAC,KAAK,CAAG,KAAM,CAAAjB,cAAc,CAACa,QAAQ,CAAEC,SAAS,CAAC,CACvD,GAAIG,KAAK,CAAE,CACT,KAAM,CAAEC,IAAI,CAAEC,OAAO,CAAEC,KAAM,CAAC,CAAGH,KAAK,CACtCD,KAAK,IAAAK,MAAA,CAAMH,IAAI,EAAI,kBAAkB,EAAAG,MAAA,CAAGD,KAAK,CAAG,IAAI,CAAGA,KAAK,CAAG,EAAE,EAAAC,MAAA,CAAGF,OAAO,CAAG,IAAI,CAAGA,OAAO,CAAG,EAAE,CAAE,CACrG,CACF,CAAE,MAAOG,CAAC,CAAE,CACV;AAAA,CAGFjB,cAAc,CAAC,CAAEkB,KAAK,IAAAF,MAAA,CAAKR,QAAQ,MAAAQ,MAAA,CAAIP,SAAS,CAAE,CAAEE,KAAM,CAAC,CAAC,CAC5DT,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CACD,IAAM,CACJA,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CACD,CAAEiB,kBAAkB,CAAE,IAAI,CAAEC,OAAO,CAAE,KAAK,CAAEC,UAAU,CAAE,KAAM,CAChE,CAAC,CACH,CAAC,CAED,mBACExB,IAAA,CAACH,MAAM,EAAC4B,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,SAAS,CAACC,OAAO,CAAErB,iBAAkB,CAACsB,QAAQ,CAAExB,SAAU,CAAAyB,QAAA,CACzFzB,SAAS,CAAG,mBAAmB,CAAG,sBAAsB,CACnD,CAAC,CAEb,CAAC,CAED,cAAe,CAAAH,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}